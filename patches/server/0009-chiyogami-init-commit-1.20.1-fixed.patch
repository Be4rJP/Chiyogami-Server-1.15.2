From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: bea4dev <bea0224@outlook.jp>
Date: Tue, 13 Jun 2023 22:28:27 +0900
Subject: [PATCH] chiyogami-init-commit-1.20.1-fixed


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index d307fa88eee70c1653592e67b58934d9a5ab5de1..3e25851044b5a7d6ac077fecb1e851f34fa956b8 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -303,7 +303,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     protected int boardingCooldown;
     @Nullable
     private Entity vehicle;
-    private Level level;
+    public Level level;
     public double xo;
     public double yo;
     public double zo;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 74d06790de674cbd230a0b14ac9a6b614c9f84ef..ea2dbb73a2e1da171aa8009be089163fb2940065 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -254,12 +254,14 @@ import org.bukkit.scoreboard.Criteria;
 import org.bukkit.structure.StructureManager;
 import org.bukkit.util.StringUtil;
 import org.bukkit.util.permissions.DefaultPermissions;
+import org.spigotmc.AsyncCatcher;
 import org.yaml.snakeyaml.LoaderOptions;
 import org.yaml.snakeyaml.Yaml;
 import org.yaml.snakeyaml.constructor.SafeConstructor;
 import org.yaml.snakeyaml.error.MarkedYAMLException;
 
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
+import world.chiyogami.thread.WorldThreadPool;
 
 import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
@@ -2351,8 +2353,19 @@ public final class CraftServer implements Server {
 
     @Override
     public boolean isPrimaryThread() {
-        return io.papermc.paper.util.TickThread.isTickThread(); // Paper - rewrite chunk system
+        return !AsyncCatcher.isAsync(); // Paper - rewrite chunk system // Chiyogami - thread
     }
+    // Chiyogami start - thread
+    @Override
+    public boolean isMainThread() {
+        return AsyncCatcher.isMainThread();
+    }
+
+    @Override
+    public boolean isWorldThread() {
+        return WorldThreadPool.isWorldThread();
+    }
+    // Chiyogami end
 
     // Paper start - Adventure
     @Override
