From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: bea4dev <bea0224@outlook.jp>
Date: Wed, 21 Aug 2024 22:44:18 +0900
Subject: [PATCH] parallel bridge


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index b13057c0792067cc6b0abdf0d64a9be2cc9389a4..10c02831bb7095702f81425aedf1d7c7508da206 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -260,6 +260,7 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
     private static final Component INVALID_COMMAND_SIGNATURE = Component.translatable("chat.disabled.invalid_command_signature").withStyle(ChatFormatting.RED);
     private static final int MAX_COMMAND_SUGGESTIONS = 1000;
     public ServerPlayer player;
+    @Nullable public world.chiyogami.bridge.ParallelEntityMoveHandler parallelEntityMoveHandler = null; // Chiyogami - parallel bridge
     public final PlayerChunkSender chunkSender;
     private int tickCount;
     private int ackBlockChangesUpTo = -1;
@@ -1457,6 +1458,7 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                                 }
                                 // Paper end - Add PlayerJumpEvent
                             }
+                            org.bukkit.util.BoundingBox oldBox = this.player.getBukkitEntity().getBoundingBox(); // Chiyogami - parallel bridge
 
                             boolean flag2 = this.player.verticalCollisionBelow;
 
@@ -1503,6 +1505,14 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                                     teleportBack = this.hasNewCollision(worldserver, this.player, axisalignedbb, newBox);
                                 } // else: no collision at all detected, why do we care?
                             }
+                            // Chiyogami start - parallel bridge
+                            if (teleportBack) {
+                                world.chiyogami.bridge.ParallelEntityMoveHandler moveHandler = this.parallelEntityMoveHandler;
+                                if (moveHandler != null) {
+                                    org.bukkit.util.Vector movement = new org.bukkit.util.Vector(toX - lastPosX, toY - lastPosY, toZ - lastPosZ);
+                                    teleportBack = moveHandler.tryToMoveBoundingBox(oldBox, movement);
+                                }
+                            } // Chiyogami end
                             // Paper end - optimise out extra getCubes
                             if (teleportBack) {
                                 io.papermc.paper.event.player.PlayerFailMoveEvent event = fireFailMove(io.papermc.paper.event.player.PlayerFailMoveEvent.FailReason.CLIPPED_INTO_BLOCK,
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 0368d6ba9cc9fe557d3c7172a87a7a5b15445e47..f6ce1b5a0226c3198cb762b69426c51da3eab807 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -345,6 +345,7 @@ public abstract class PlayerList {
 
         PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, io.papermc.paper.adventure.PaperAdventure.asAdventure(ichatmutablecomponent)); // Paper - Adventure
         this.cserver.getPluginManager().callEvent(playerJoinEvent);
+        playerconnection.parallelEntityMoveHandler = world.chiyogami.bridge.ParallelBridge.getParallelEntityMoveHandler(player.getBukkitEntity()); // Chiyogami - parallel bridge
 
         if (!player.connection.isAcceptingMessages()) {
             return;
diff --git a/src/main/java/world/chiyogami/bridge/ParallelBridge.java b/src/main/java/world/chiyogami/bridge/ParallelBridge.java
index 98fb8adae48085586068f6c7ef056857cf8a9b31..40ece2acca0775569cc70e745e6ee8ecbf3af322 100644
--- a/src/main/java/world/chiyogami/bridge/ParallelBridge.java
+++ b/src/main/java/world/chiyogami/bridge/ParallelBridge.java
@@ -7,7 +7,7 @@ import java.util.concurrent.ConcurrentHashMap;
 
 public class ParallelBridge {
     
-    public static boolean parallelWorldBridge = false;
+    public static boolean parallelWorldBridge = true;
     
     private static final Map<Player, ParallelEntityMoveHandler> parallelEntityMoveHandlerMap = new ConcurrentHashMap<>();
     
